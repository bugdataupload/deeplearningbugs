[
  {
    "node type": "keyword",
    "accuracy": "0.742964\n",
    "training time": 462.0,
    "line number": "(85, 30)",
    "node content": "<Keyword: True>",
    "related code": "LIMIT_PYTHON_ITERATIONS = True\n"
  },
  {
    "node type": "number",
    "accuracy": "0.745779\n",
    "training time": 471.0,
    "line number": "(86, 33)",
    "node content": "<Number: 100000000>",
    "related code": "PYTHON_MAX_ITERATIONS = 100000000  # Fails in about one minute for empty loops.\n"
  },
  {
    "node type": "keyword",
    "accuracy": "0.716698\n",
    "training time": 482.0,
    "line number": "(87, 30)",
    "node content": "<Keyword: True>",
    "related code": "WARN_INEFFICIENT_UNROLL = True\n"
  },
  {
    "node type": "number",
    "accuracy": "0.732645\n",
    "training time": 477.0,
    "line number": "(88, 40)",
    "node content": "<Number: 3000>",
    "related code": "INEFFICIENT_UNROLL_MIN_ITERATIONS = 3000\n"
  },
  {
    "node type": "number",
    "accuracy": "0.734522\n",
    "training time": 507.0,
    "line number": "(89, 30)",
    "node content": "<Number: 1>",
    "related code": "INEFFICIENT_UNROLL_MIN_OPS = 1\n"
  },
  {
    "node type": "keyword",
    "accuracy": "0.737336\n",
    "training time": 564.0,
    "line number": "(114, 15)",
    "node content": "<Keyword: True>",
    "related code": "    return True\n"
  },
  {
    "node type": "keyword",
    "accuracy": "0.745779\n",
    "training time": 590.0,
    "line number": "(119, 18)",
    "node content": "<Keyword: False>",
    "related code": "      return False\n"
  },
  {
    "node type": "operator",
    "accuracy": "0.712008\n",
    "training time": 542.0,
    "line number": "(172, 31)",
    "node content": "<Operator: !=>",
    "related code": "      if init_loop_var.dtype != first_iter_var.dtype:\n"
  },
  {
    "node type": "not_test",
    "accuracy": "0.726079\n",
    "training time": 617.0,
    "line number": "(160, 50)",
    "node content": "PythonNode(not_test, [<Keyword: not>, PythonNode(atom_expr, [<Name: tensor_util@160,14>, PythonNode(trailer, [<Operator: .>, <Name: is_tensor@160,26>]), PythonNode(trailer, [<Operator: (>, <Name: init_loop_var@160,36>, <Operator: )>])])])",
    "related code": "      if (not tensor_util.is_tensor(init_loop_var) or\n"
  },
  {
    "node type": "keyword",
    "accuracy": "0.734522\n",
    "training time": 541.0,
    "line number": "(160, 13)",
    "node content": "<Keyword: not>",
    "related code": "      if (not tensor_util.is_tensor(init_loop_var) or\n"
  },
  {
    "node type": "operator",
    "accuracy": "0.736398\n",
    "training time": 524.0,
    "line number": "(450, 40)",
    "node content": "<Operator: <>",
    "related code": "            math_ops.logical_and(delta < 0, iterate > limit))\n"
  },
  {
    "node type": "number",
    "accuracy": "0.727955\n",
    "training time": 531.0,
    "line number": "(450, 42)",
    "node content": "<Number: 0>",
    "related code": "            math_ops.logical_and(delta < 0, iterate > limit))\n"
  },
  {
    "node type": "operator",
    "accuracy": "0.713884\n",
    "training time": 464.0,
    "line number": "(450, 53)",
    "node content": "<Operator: >>",
    "related code": "            math_ops.logical_and(delta < 0, iterate > limit))\n"
  }
]